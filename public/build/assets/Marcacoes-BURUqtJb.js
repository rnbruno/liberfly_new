import{_ as N,C as K,r as v,f as x,S as d,c as u,b as t,F as z,h as j,j as w,o as c,t as p,n as A,i as C,w as g,k as S,e as U,z as F,l as V,v as y}from"./app-BU69Np-9.js";import{M as H,a as P,u as R,b as L,f as q}from"./marcacao.css_vue_type_style_index_1_src_true_lang-D6WiRLiG.js";const G={name:"AgendarMarcacoes",components:{ModalAtribuir:H,Modal_e:P},data(){return{modalTitle:"",showModal:!1,showModalAdd:!1,showModalAtt:!1,isModalVisible:!1,modalTitleAdd:"",modalTitleAtt:"",modalType:"",modalTypeAtt:"",modalName:"",modalInput:Array,modalButton:Array,modalAtribuir_:Array,currentPageTitle:"Título da Página Atual",isModalVisible:!1,modalInputValue:"",modalInputValue2:"",modalInputValue3:"",modalInitialOption:1,hiddenValue:"hidden_value",marcacaoId_:"",isModalVisible1:!1}},setup(){const{marcacao:a,marcacoes:e,getMarcacoes:h,updateMarcacoes:l,deleteMarcacao:i,edicaoMarcacoes:m}=R(),{medical:I,medicals:f,getMedicals:o}=L(),{user:s,processing:T,logout:O}=K(),_=v([]),k=()=>{_.value=f.value.map(n=>({value:n.id,text:n.name}))};x(async()=>{await h(),await o(),k()});const E=async n=>{try{await i(n),d.fire({title:"Desativado",text:"Conta desativada com sucesso.",icon:"success",confirmButtonText:"OK"})}catch(r){r.response&&r.response.data&&r.response.data.message?d.fire({title:"Error",text:r.response.data.message,icon:"error",confirmButtonText:"OK"}):d.fire({title:"Error",text:"Erro desconhecido ao atualizar a conta.",icon:"error",confirmButtonText:"OK"})}},M=async n=>{await h()};v({reason:"",notes:"",id:""});const D=async n=>{const{selectedOption:r,hiddenValue:b}=n;l(b,r),await M()},B=async n=>{const{selectedOption:r,hiddenValue:b}=n;m(b,r),await M()};return x(async()=>{}),{marcacoes:e,modalOptions:_,atualizarMark:M,confirmarAtribuir:D,desactiveconta:E,deleteMarcacao:i,user:s,processing:T,logout:O,confirmarEdicao1:B}},methods:{formatDate(a){return q(new Date(a),"dd/MM/yyyy HH:mm")},ModalAtribuir(a,e,h){this.modalTitle=`Marcação ID: ${a}`,this.modalInputValue="Initial value",this.modalInputValue2=e,this.modalInputValue3=h,this.isModalVisible=!0,this.marcacaoId_=a},closeModal(){this.isModalVisible=!1},closeModal1(){this.showModalAtt=!1},CreateMarcacao(){this.modalTitle=`Marcação ID: ${marcacaoId}`,this.modalInputValue="Initial value",this.modalInputValue2=date,this.modalInputValue3=name_animal,this.isModalVisible=!0,this.marcacaoId_=marcacaoId},edit(a){console.log("selecioanndo"),this.modalInputValue="Initial value",this.initialInputValue=a,this.showModalAtt=!0,this.isModalVisible=!0},async editw(a){this.modalInputValue="Initial value",this.showModalAtt=!0,this.isModalVisible=!0;try{await this.update(selectedOption,1),d.fire({title:"Medical atribuido",text:"Marcação atribuida com sucesso.",icon:"success",confirmButtonText:"OK"}),await this.atualizarMark()}catch(e){e.response&&e.response.data&&e.response.data.message?d.fire({title:"Error",text:e.response.data.message,icon:"error",confirmButtonText:"OK"}):d.fire({title:"Error",text:"Erro desconhecido ao atribuir medical.",icon:"error",confirmButtonText:"OK"})}},async handleConfirmAcount(){console.log("Confirmed with input:",this.modalInput,this.modalName);try{const a=await axios.patch(`/api/contas/update-name/${this.modalInput}`,{conta:this.modalName,conta_id:this.modalInput});console.log("Item updated successfully:",a.data),d.fire({title:"Count edit",text:"Conta editada com sucesso.",icon:"success",confirmButtonText:"OK"}),await this.atualizarCount()}catch(a){a.response&&a.response.data&&a.response.data.message?d.fire({title:"Error",text:a.response.data.message,icon:"error",confirmButtonText:"OK"}):d.fire({title:"Error",text:"Erro desconhecido ao atualizar a conta.",icon:"error",confirmButtonText:"OK"})}},openModal(a){this.currentMarcacaoId=a,this.showModalAtt=!0}}},J={class:""},Q={class:"bg-white overflow-hidden shadow-sm min-w-full align-middle"},W={style:{width:"755px"},class:"table table-striped min-w-full divide-y divide-gray-200 table-striped"},X={class:"text-center"},Y={key:0},Z=["onClick"],$={class:"mb-3"},tt=["value"],et={key:1},at={class:"items-center justify-end"},ot={key:0,class:"",title:"Excluído"},it={key:1,class:"items-center justify-end"},st=["onClick"],lt=["onClick"],nt={class:"mb-3"};function dt(a,e,h,l,i,m){const I=w("ModalAtribuir"),f=w("Modal_e");return c(),u("div",J,[t("main",null,[t("div",Q,[t("table",W,[e[8]||(e[8]=t("thead",{class:"thead-light"},[t("tr",{class:"thead-light"},[t("th",null,"Marcação"),t("th",null,"Médico Atribuído"),t("th",null,"Tipo Animal"),t("th",null,"Data da marcação"),t("th",null,"Reason"),t("th",null,"Notes"),t("th",{class:"text-center items-center justify-end"},"Ações")])],-1)),t("tbody",null,[(c(!0),u(z,null,j(l.marcacoes,o=>(c(),u("tr",{key:o.id},[t("td",X,p(o.id),1),t("td",{class:A({"item-excluido":o.excluido==1})},[o.medical_id==0&&l.user.type_user!==1?(c(),u("div",Y,[t("button",{class:"btn btn-success btn-sm items-center",onClick:s=>m.ModalAtribuir(o.id,o.marcacao_date,o.type_animal_name),title:"Atribua a um médico"},"Atribuir",8,Z),C(I,{isVisible:i.isModalVisible,onClose:m.closeModal,title:i.modalTitle,initialInputValue:i.modalInputValue,initialInputValue2:i.modalInputValue2,initialInputValue3:i.modalInputValue3,options:l.modalOptions,initialOption:i.modalInitialOption,onConfirm:l.confirmarAtribuir,hiddenValue:o.id},{bodyAtt:g(()=>[t("div",$,[e[3]||(e[3]=t("label",{for:"modalInput",class:"form-label"},"Name count",-1)),t("input",{type:"hidden",value:i.hiddenValue},null,8,tt)])]),_:2},1032,["isVisible","onClose","title","initialInputValue","initialInputValue2","initialInputValue3","options","initialOption","onConfirm","hiddenValue"])])):(c(),u("div",et,p(o.medical_name),1))],2),t("td",{class:A({"item-excluido":o.excluido===1})},p(o.type_animal_name),3),t("td",null,p(o.marcacao_date),1),t("td",null,p(o.reason),1),t("td",null,p(o.notes),1),t("td",at,[o.excluido==1?(c(),u("div",ot,"Excluído")):(c(),u("div",it,[l.user.type_user!==1?(c(),u("button",{key:0,onClick:S(s=>l.deleteMarcacao(o.id),["prevent"]),class:"btn btn-danger ml-2",title:"Desativar marcação"},e[4]||(e[4]=[t("i",{class:"fa fa-trash","aria-hidden":"true"},null,-1)]),8,st)):U("",!0),t("button",{onClick:s=>m.edit(o.id,o.reason,o.notes),class:"btn btn-warning ml-2",title:"Editar marcação"},e[5]||(e[5]=[t("i",{class:"fa fa-trash","aria-hidden":"true"},null,-1),F("Edit")]),8,lt),C(f,{onClose:m.closeModal1,active_att:i.showModalAtt,initialInputValue:i.modalInputValue,onConfirm:l.confirmarEdicao1},{bodyAtt1:g(()=>[t("div",nt,[e[6]||(e[6]=t("label",{for:"modalInput",class:""},"Reason",-1)),V(t("input",{type:"hidden","onUpdate:modelValue":e[0]||(e[0]=s=>a.modalData.id=s)},null,512),[[y,a.modalData.id]]),V(t("textarea",{class:"form-control",type:"text","onUpdate:modelValue":e[1]||(e[1]=s=>a.modalData.reason=s)},null,512),[[y,a.modalData.reason]]),e[7]||(e[7]=t("label",{for:"modalInput",class:""},"Notes",-1)),V(t("textarea",{class:"form-control",type:"text","onUpdate:modelValue":e[2]||(e[2]=s=>a.modalData.notes=s)},null,512),[[y,a.modalData.notes]])])]),_:1},8,["onClose","active_att","initialInputValue","onConfirm"])]))])]))),128))])])])])])}const ct=N(G,[["render",dt]]);export{ct as default};
