import{r as i,u as _,A as C,_ as j,B as J,f as D,S as d,c as l,b as r,k as T,l as h,x as H,F as y,h as M,v as R,e as G,o as u,t as w}from"./app-BU69Np-9.js";import{M as W,a as X,u as Y,b as Z,f as ee}from"./marcacao.css_vue_type_style_index_1_src_true_lang-D6WiRLiG.js";function oe(){const o=i({});return i({id:"",data:"",horario_inicial:"",horario_final:"",disponivel:0}),_(),i({}),i(!1),C("$swal"),{horariosDisponiveis:o,getHorariosDisponiveis:async()=>{try{let n=await axios.get("/api/horarios_disponiveis");console.log(n.data),o.value=n.data}catch(n){console.error("An error occurred while fetching Horarios Dispoíveis:",n)}}}}function ae(){const o=i({});return i({id:"",name:"",breed:"",type_animals_id:"",age:"",weight:"",user_id:"",created_at:""}),_(),i({}),i(!1),C("$swal"),{animalsUsers:o,getAnimalsUser:async()=>{const n=JSON.parse(localStorage.getItem("user"));try{let t=await axios.get(`/api/animaluser/${n.id_int}`);o.value=t.data}catch(t){console.error("An error occurred while fetching Medical:",t)}}}}const se={name:"Marcacoes",props:{suggestions:{type:Array,required:!0}},components:{ModalAtribuir:W,Modal_e:X},data(){return{modalTitle:"",showModal:!1,showModalAdd:!1,showModalAtt:!1,isModalVisible:!1,modalTitleAdd:"",modalTitleAtt:"",modalType:"",modalTypeAtt:"",modalName:"",modalInput:Array,modalButton:Array,modalAtribuir_:Array,currentPageTitle:"Título da Página Atual",isModalVisible:!1,modalInputValue:"",modalInputValue2:"",modalInputValue3:"",modalInitialOption:1,hiddenValue:"hidden_value",marcacaoId_:""}},setup(){const o=_(),{marcacao:e,marcacoes:n,getMarcacoes:t,updateMarcacoes:U,deleteMarcacao:g}=Y(),{medical:a,medicals:b,getMedicals:A}=Z(),{horariosDisponiveis:I,getHorariosDisponiveis:x}=oe(),{animalsUsers:B,getAnimalsUser:N}=ae(),O=i([]),c=i([]),m=i([]),p=i(""),v=i(!1),k=()=>{marcacoes_notes.value=n.value.map(s=>({text:`${s.notes}`}))},F=J(()=>p.value===""?[]:n.value.filter(s=>s.notes.toLowerCase().includes(p.value.toLowerCase())).map(s=>s.notes)),q=()=>{v.value=!0},E=()=>{setTimeout(()=>{v.value=!1},100)},Q=s=>{p.value=s,v.value=!1},S=i(null),V=i(null),K=()=>{O.value=I.value.map(s=>({value:s.id,text:`${s.data} - ${s.hora_inicio}`}))},L=()=>{c.value=B.value.map(s=>({value:s.id,text:`${s.name} - ${s.type_name}`})),c.value.length>0&&(S.value=c.value[0].value)},z=()=>{m.value=I.value.map(s=>({value:s.id,text:`${s.data}  ${s.hora_inicio}`})),m.value.length>0&&(V.value=m.value[0].value)},f=i({note:""}),P=i({}),$=async()=>{try{console.log(f.value);const s=await axios.post("/api/submitMarcacao",f.value);console.log("Formulário enviado com sucesso:",s.data),f.value={name:"",email:"",message:""}}catch(s){console.error("Erro ao enviar o formulário:",s)}};return D(async()=>{await t(),await A(),await x(),await N(),K(),L(),z()}),D(async()=>{}),{marcacoes:n,modalOptions:O,getHorariosDisponiveis:x,modalOptionsHorariosDisponiveis:m,modalOptionsAnimalsUser:c,selectedOptionAnimalUser:S,selectedOptionHorariosDisponiveis:V,searchQuery:p,showSuggestions:v,filteredSuggestions:F,filterSuggestions:q,hideSuggestions:E,selectSuggestion:Q,marcacoesNote:k,errors:P,handleSubmit:$,form:f,router:o}},methods:{formatDate(o){return ee(new Date(o),"dd/MM/yyyy HH:mm")},ModalAtribuir(o,e,n){this.modalTitle=`Marcação ID: ${o}`,this.modalInputValue="Initial value",this.modalInputValue2=e,this.modalInputValue3=n,this.isModalVisible=!0,this.marcacaoId_=o},closeModal(){this.isModalVisible=!1},CreateMarcacao(){this.modalTitle=`Marcação ID: ${marcacaoId}`,this.modalInputValue="Initial value",this.modalInputValue2=date,this.modalInputValue3=name_animal,this.isModalVisible=!0,this.marcacaoId_=marcacaoId},async submitForm(){try{const o={animaluser_:this.selectedOptionAnimalUser,horariosDisponiveis_:this.selectedOptionHorariosDisponiveis,note:this.searchQuery},e=await axios.post("/api/submitMarcacao",o);this.$router.push({name:"welcome.index"}),d.fire({position:"top-end",icon:"success",title:"Marcação inserida com sucesso!",showConfirmButton:!1,timer:1500})}catch(o){d.fire({position:"top-end",icon:"error",title:o,showConfirmButton:!1,timer:1500})}},async handleConfirmAcount(){console.log("Confirmed with input:",this.modalInput,this.modalName);try{const o=await axios.patch(`/api/contas/update-name/${this.modalInput}`,{conta:this.modalName,conta_id:this.modalInput});console.log("Item updated successfully:",o.data),d.fire({title:"Count edit",text:"Conta editada com sucesso.",icon:"success",confirmButtonText:"OK"}),await this.atualizarCount()}catch(o){o.response&&o.response.data&&o.response.data.message?d.fire({title:"Error",text:o.response.data.message,icon:"error",confirmButtonText:"OK"}):d.fire({title:"Error",text:"Erro desconhecido ao atualizar a conta.",icon:"error",confirmButtonText:"OK"})}},openModal(o){this.currentMarcacaoId=o,this.showModalAtt=!0}}},te={class:"row g-5"},ie={class:"col-md-12"},re={class:"row g-3"},ne={class:"col-md-5"},le=["value"],ue={class:"col-md-5"},de={class:"autocomplete"},ce={key:0,class:"suggestions-list"},me=["onMousedown"],pe={class:"col-md-5"},ve=["value"];function fe(o,e,n,t,U,g){return u(),l("main",null,[r("div",te,[r("div",ie,[r("form",{class:"needs-validation",onSubmit:e[6]||(e[6]=T((...a)=>g.submitForm&&g.submitForm(...a),["prevent"])),method:"post"},[r("div",re,[r("div",ne,[e[7]||(e[7]=r("label",{for:"country",class:"form-label"},"Animal Cadastrado",-1)),h(r("select",{class:"form-control",for:"animaluser_",id:"animaluser_",name:"animaluser_","onUpdate:modelValue":e[0]||(e[0]=a=>t.selectedOptionAnimalUser=a),required:""},[(u(!0),l(y,null,M(t.modalOptionsAnimalsUser,a=>(u(),l("option",{key:a.value,value:a.value},w(a.text),9,le))),128))],512),[[H,t.selectedOptionAnimalUser]])]),r("div",ue,[e[8]||(e[8]=r("label",{for:"country",class:"form-label"},"Notes",-1)),r("div",de,[h(r("textarea",{type:"text",for:"note",id:"note",name:"note","onUpdate:modelValue":e[1]||(e[1]=a=>t.searchQuery=a),onInput:e[2]||(e[2]=(...a)=>t.filterSuggestions&&t.filterSuggestions(...a)),onFocus:e[3]||(e[3]=a=>t.showSuggestions=!0),onBlur:e[4]||(e[4]=(...a)=>t.hideSuggestions&&t.hideSuggestions(...a)),class:"form-control",required:""},null,544),[[R,t.searchQuery]]),t.showSuggestions?(u(),l("ul",ce,[(u(!0),l(y,null,M(t.filteredSuggestions,(a,b)=>(u(),l("li",{key:b,onMousedown:T(A=>t.selectSuggestion(a),["prevent"]),class:"suggestion-item"},w(a),41,me))),128))])):G("",!0)])]),r("div",pe,[e[9]||(e[9]=r("label",{for:"country",class:"form-label"},"Horarios",-1)),h(r("select",{class:"form-control",id:"horariosD",name:"horariosD",for:"horariosD","onUpdate:modelValue":e[5]||(e[5]=a=>t.selectedOptionHorariosDisponiveis=a),required:""},[(u(!0),l(y,null,M(t.modalOptionsHorariosDisponiveis,a=>(u(),l("option",{key:a.value,value:a.value},w(a.text),9,ve))),128))],512),[[H,t.selectedOptionHorariosDisponiveis]])]),e[10]||(e[10]=r("div",{class:"col-md-12"},[r("button",{class:"btn btn-primary btn-lg items-center",type:"submit",title:"marque um agendamento"},"Marcar")],-1))])],32)])])])}const ye=j(se,[["render",fe]]);export{ye as default};
